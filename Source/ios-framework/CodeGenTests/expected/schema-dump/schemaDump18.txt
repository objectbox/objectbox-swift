Schema {
	entities = [SchemaEntity {
		modelId = Optional(1)
		modelUid = Optional(17664)
		className = WashingMachine
		dbName = nil
		properties = [SchemaProperty {
			modelId = Optional(IdUid(1:14592))
			propertyName = id
			propertyType = long
			propertyFlags = [SourceryLib.PropertyFlags.id]
			propertySwiftType = EntityId<WashingMachine>
			entityName = WashingMachine
			unwrappedPropertyType = EntityId<WashingMachine>
			dbName = nil
			modelIndexId = nil
			backlinkName = nil
			backlinkType = nil
			isObjectId = true
			isBuiltInType = true
			isStringType = false
			isRelation = false
		}
, SchemaProperty {
			modelId = Optional(IdUid(2:16640))
			propertyName = lineName
			propertyType = string
			propertyFlags = []
			propertySwiftType = String
			entityName = WashingMachine
			unwrappedPropertyType = String
			dbName = nil
			modelIndexId = nil
			backlinkName = nil
			backlinkType = nil
			isObjectId = false
			isBuiltInType = false
			isStringType = true
			isRelation = false
		}
, SchemaProperty {
			modelId = Optional(IdUid(3:18688))
			propertyName = destinationName
			propertyType = string
			propertyFlags = []
			propertySwiftType = String
			entityName = WashingMachine
			unwrappedPropertyType = String
			dbName = nil
			modelIndexId = nil
			backlinkName = nil
			backlinkType = nil
			isObjectId = false
			isBuiltInType = false
			isStringType = true
			isRelation = false
		}
]
		indexes = []
		relations = []
		toManyRelations = []
		lastPropertyId = Optional(IdUid(3:18688))
		isEntitySubclass = true
		isValueType = false
		hasStringProperties = true
		idProperty = Optional(SchemaProperty {
			modelId = Optional(IdUid(1:14592))
			propertyName = id
			propertyType = long
			propertyFlags = [SourceryLib.PropertyFlags.id]
			propertySwiftType = EntityId<WashingMachine>
			entityName = WashingMachine
			unwrappedPropertyType = EntityId<WashingMachine>
			dbName = nil
			modelIndexId = nil
			backlinkName = nil
			backlinkType = nil
			isObjectId = true
			isBuiltInType = true
			isStringType = false
			isRelation = false
		}
)
		idCandidates = [SchemaProperty {
			modelId = Optional(IdUid(1:14592))
			propertyName = id
			propertyType = long
			propertyFlags = [SourceryLib.PropertyFlags.id]
			propertySwiftType = EntityId<WashingMachine>
			entityName = WashingMachine
			unwrappedPropertyType = EntityId<WashingMachine>
			dbName = nil
			modelIndexId = nil
			backlinkName = nil
			backlinkType = nil
			isObjectId = true
			isBuiltInType = true
			isStringType = false
			isRelation = false
		}
]
	}
]
lastEntityId = IdUid(1:17664)
	lastRelationId = IdUid(0:0)
	lastIndexId = IdUid(1:15616)
}
